machine:
  services:
    - docker
experimental:
  notify:
    branches:
      only:
        - master
dependencies:
  override:
    - go get -t -d -v ./...
    - CGO_ENABLED=0 GOOS=linux go build -a -ldflags '-s'
    - docker build -t local_user/go-mongo-backup:${CIRCLE_TAG} .
test:
  override:
    - docker run --name mongo -d mongo:2.6.12
    - docker run --volume ~/.aws:/root/.aws --name mongo-backup --link mongo -d -p 8080:8080 local_user/go-mongo-backup:${CIRCLE_TAG}
    - curl -s -XPOST 'localhost:8080/v0/dump' -d '{"bucket":"net-openwhere-mongodb-snapshots-dev","path":"/mongo-backup-test/"}' | tee out.txt && cat out.txt | grep success
    - grep -q -i "fail\|success" <(docker logs --follow mongo-backup 2>&1)
    - docker logs mongo-backup 2>&1 | grep -i "success"
deployment:
  release:
    tag: /.*/
    commands:
      - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
      - docker tag local_user/go-mongo-backup:${CIRCLE_TAG} ${DOCKER_USER}/go-mongo-backup:${CIRCLE_TAG}
      - docker push ${DOCKER_USER}/go-mongo-backup:${CIRCLE_TAG}
  latest:
    branch: master
    commands:
      - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
      - docker tag local_user/go-mongo-backup ${DOCKER_USER}/go-mongo-backup
      - docker push ${DOCKER_USER}/go-mongo-backup
